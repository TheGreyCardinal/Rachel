Дизайн-документ проекта "Rachel".
=================================

0. Данные об авторстве.
   Разработчик: Артём Власов (Artyom Vlasov).
   E-mail: thegreycardinal@gmail.com.
   GitHub: https://github.com/TheGreyCardinal.


1. Описание.

   Rachel - Инструмент для цветового оформления кода (подсветки).

   Название образовано ассоциативным методом по следующему пути.
   Подсветка -> HighLighting -> HL -> aitch el -> Rachel.


2. Структура.

   Инструмент представлен следующими модулями:
   • Tree. - Читает список правил и по ним разбирает входную строку
     в синтаксическое дерево.

   • Decorate. - Читает список правил оформления и применяет их к
     синтаксическому дереву. Возвращает строку, пригодную для вставки на
     web-страницу.

   • Component. - Добавляет на web-страницу компонент, содержащий
     оформленный код - строку, возвращённую модулем Decorate.


3. Область применения.

   Основное назначение - оформление фрагментов кода на web-страницах.
   В частности, при составлении документации к каким-либо проектам.

   Побочное применение - возможно использование только модуля Tree,
   если оформление не требуется, а нужен только синтаксический разбор.


4. Цели проекта.

   • Изучить вопрос синтаксического разбора текста.

   • Повысить навыки разработки, - как результат решения задачи нового типа.

   • Получить удобный инструмент для оформления кода, при создании
     документации к этому и другим проектам.


5. Требования к проекту.

   • Синтаксический разбор основных синтаксисов, используемых в web:
     ○ CSS.
     ○ HTML.
     ○ JavaScript.
     ○ PHP.

   • Лёгкость и простота использования.

   • Малый размер. - Желательно, чтобы инструмент загружался за один запрос.
     В качестве ориентира выбрана скорость dial-up - 56 Кбит/с.

     Таким образом: Rachel + Набор правил для 4 базовых синтаксисов -
     не должны превышать размер 6.8 Кбайт.

   • Достаточно высокая скорость работы.
     Оценивается время на обработку:
     ○ 1 000 символов.
     ○ 10 000 символов.
     ○ 100 000 символов.
     Для случаев чистого синтаксиса.

     Обработка большего количества символов не оценивается,
     т.к., при грамотной организации документации, наличие более крупных
     фрагментов кода маловероятно.

     Скорость обработки смешанного синтаксиса не оценивается в виду
     повышенной многофакторности. - Входная строка может содержать разные
     синтаксисы, разное количество обрабатываемых фрагментов,
     разный размер фрагментов, разную синтаксическую сложность.

   • Механизм регулярных выражений не используется.

   • Простое описание синтаксических правил, используемых для разбора
     входной строки.

   • Служебные слова не обрабатываются - задача правил в том, чтобы описать
     синтаксис на базовом уровне. Таким образом, при добавлении в синтаксис
     новых служебных слов, - синтаксический разбор останется корректным.


6. Требования к содержанию документации.

   • Описание использования инструмента.

   • Примеры использования инструмента.

   • Описание работы составных частей и инструмента в целом.

   • Данный дизайн-документ с логом разработки (опционально).


7. Требования к реализации.

   Изначально, проект реализуется на JavaScript.
   В случае успешного завершения, создаётся вариант на PHP.

   Проект реализуется базовыми средствами языка, так что от него ожидается,
   полная работоспособность в браузерах (в том числе старых) и в контексте
   PHP 5.4.19+ (для php-версии).


8. Требования к тестированию.

   • Желательно хотя бы базовое unit-тестирование отдельных частей проекта.

   • Unit-тестирование должно быть задокументировано, чтобы было понятно,
     как запустить тесты и получить результат.

   • Тестирование в разных браузерах.

   • Тестирование на разных версиях php.

   • Проводимое тестирование должно быть задокументировано
     хотя бы на базовом уровне.


=================================

Лог разработки проекта "Rachel".

1. (1:31) Написан начальный дизайн-документ проекта.
2. (0:38) Добавлен пример для проверки функционала.
3. (0:48) Добавлена обработка range-правил.
4. (0:38) Добавлена обработка line-правил.
5. (0:47) Добавлена функция вставки токена.
6. (0:04) Изменена обработка range-правил для токенов.
7. (0:04) Изменена обработка line-правил для токенов.
8. (1:36) Исправлены обработка правил и вставка токена.
          Добавлена функция применения правил разбора.
9. (0:27) Добавлена функция декорирования токенов.
10. (1:07) Добавлена обработка сложных range-правил.
11. (0:28) Сгруппирована обработка правил разбора.
12. (19:30) Добавлен строгий режим для range-правил.
13. (35:00) Добавлена обработка rival-правил (конфликтов).

